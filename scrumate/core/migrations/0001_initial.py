# Generated by Django 2.2.1 on 2019-05-09 13:36

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50)),
            ],
            options={
                'permissions': (('dev_dashboard', 'Can See Dev Dashboard'),),
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('raise_date', models.DateField(default=None)),
                ('resolve_date', models.DateField(blank=True, default=None, null=True)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In Progress'), (3, 'Done'), (4, 'Delivered'), (5, 'Rejected')], default=1)),
                ('approved_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_issues', to='people.Employee')),
            ],
            options={
                'permissions': (('update_issue_status', 'Can Update Status of Issue'),),
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50)),
                ('description', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Portlet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('html_template', models.CharField(max_length=100)),
                ('data_url', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(default='')),
                ('type', models.IntegerField(choices=[(1, 'Public'), (2, 'Private'), (3, 'In House')], default=1)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In Progress'), (3, 'Completed')], default=1)),
                ('entry_date', models.DateField(default=datetime.date.today, verbose_name='Entry Date')),
                ('git_username', models.CharField(blank=True, max_length=50, null=True, verbose_name='Github Username')),
                ('git_password', models.CharField(blank=True, max_length=50, null=True, verbose_name='Github Password')),
                ('git_repo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Github Repo')),
                ('client', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='people.Client')),
            ],
            options={
                'permissions': (('update_project_status', 'Can Update Status of Project'), ('view_commit_logs', 'Can View Commit Logs of Project')),
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('version', models.CharField(max_length=100, null=True)),
                ('release_date', models.DateField(default=None)),
                ('delivery_date', models.DateField(blank=True, default=None, null=True)),
                ('release_log', models.TextField(blank=True, default=None, null=True)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('approved_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_releases', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_releases', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Project')),
            ],
        ),
        migrations.CreateModel(
            name='UserStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(default='', verbose_name='Title')),
                ('details', models.TextField(blank=True, default='', null=True)),
                ('code', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Analysing'), (3, 'Analysis Complete'), (4, 'Developing'), (5, 'Development Complete'), (6, 'Delivered')], default=1, null=True)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('analysed_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analysed_user_stories', to='people.Employee')),
                ('approved_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_user_stories', to='people.Employee')),
                ('project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.Project')),
                ('release', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.Release')),
            ],
            options={
                'permissions': (('update_user_story_status', 'Can Update Status of User Story'),),
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_text', models.TextField(default='')),
                ('activity_data', models.TextField(default='')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.IntegerField(blank=True, choices=[(1, 'Analysis'), (2, 'Development'), (3, 'Testing'), (4, 'Implementation')], default=1, null=True)),
                ('estimation', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('start_date', models.DateField(default=None)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('priority', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High')], default=3, null=True)),
                ('assign_date', models.DateField(blank=True, default=None, null=True)),
                ('approved_date', models.DateField(blank=True, default=None, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In Progress'), (3, 'Partially Done'), (4, 'Done'), (5, 'Delivered'), (6, 'Not Done'), (7, 'Rejected')], default=1)),
                ('approved_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_by_tasks', to='people.Employee')),
                ('assigned_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_by_tasks', to='people.Employee')),
                ('assignee', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='people.Employee')),
                ('issue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Issue')),
                ('parent_task', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Task')),
                ('project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Project')),
                ('release', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Release')),
                ('responsible', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_tasks', to='people.Employee')),
                ('user_story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UserStory')),
            ],
            options={
                'permissions': (('update_task_status', 'Can Update Status of Task'),),
            },
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('day_wise_label', models.TextField(blank=True, default='', null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'On Going'), (3, 'Completed')], default=1, null=True)),
                ('department', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='people.Department')),
            ],
            options={
                'permissions': (('update_sprint_status', 'Can Update Status of Sprint'), ('status_report', 'Can See Sprint Status Report'), ('status_report_download', 'Can Download Sprint Status Report')),
            },
        ),
        migrations.CreateModel(
            name='OverTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_date', models.DateField(default=None)),
                ('description', models.TextField(default='')),
                ('comment', models.TextField(default='')),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In Progress'), (3, 'Done'), (4, 'Delivered'), (5, 'Rejected')], default=1)),
                ('assigned_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_by_over_times', to=settings.AUTH_USER_MODEL)),
                ('assignee', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignee_over_times', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Project')),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='project',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Project'),
        ),
        migrations.AddField(
            model_name='issue',
            name='raised_by',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='raised_issues', to='people.Employee'),
        ),
        migrations.AddField(
            model_name='issue',
            name='user_story',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.UserStory'),
        ),
        migrations.CreateModel(
            name='Deliverable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('estimated_hour', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True, verbose_name='Point')),
                ('priority', models.IntegerField(blank=True, choices=[(1, 'Low'), (2, 'Medium'), (3, 'High')], default=3, null=True)),
                ('assign_date', models.DateField(blank=True, default=None, null=True)),
                ('release_date', models.DateField(blank=True, default=None, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'In Progress'), (3, 'Done'), (4, 'Delivered'), (5, 'Rejected')], default=1, null=True)),
                ('assignee', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='people.Employee')),
                ('sprint', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Sprint')),
                ('task', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Task')),
            ],
            options={
                'permissions': (('update_deliverable_status', 'Can Update Status of Deliverable'),),
            },
        ),
        migrations.CreateModel(
            name='DashboardPortlet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.IntegerField(choices=[(1, 'One'), (2, 'Two'), (3, 'Three')], default=1)),
                ('height', models.DecimalField(decimal_places=2, default=50, max_digits=15)),
                ('width', models.DecimalField(decimal_places=2, default=100, max_digits=15)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Dashboard')),
                ('portlet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Portlet')),
            ],
        ),
        migrations.CreateModel(
            name='DailyScrum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField(blank=True, default=None, null=True)),
                ('estimated_hour', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True, verbose_name='Point')),
                ('actual_hour', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('deliverable', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Deliverable')),
                ('employee', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='people.Employee')),
                ('issue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Issue')),
                ('project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Project')),
                ('release', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Release')),
                ('sprint', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Sprint')),
                ('task', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Task')),
                ('user_story', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.UserStory')),
            ],
            options={
                'permissions': (('set_actual_hour', 'Can Set Actual Hour of Daily Scrum'), ('update_actual_hour', 'Can Update Actual Hour of Daily Scrum')),
            },
        ),
    ]
